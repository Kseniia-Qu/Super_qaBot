!pip install pyTelegramBotAPI
# Чтобы добавить новое слово — нужно его прописать в объект DEFINITOINS на 13 строчке


from telebot import TeleBot, types

bot = TeleBot(token='6049164790:AAFaAxYE_08A93lODxXxPlMM46Xxwj-0hYQ', parse_mode='html') # создание бота

# список вопросов, которые знает бот
# в формате:
# 'номер по порядку': 'вопрос'
DEFINITOINS = {
	'1': 'Что такое тестирование? Цель тестирования',
	'2': 'Критерии начала и окончания тестирования',
	'3': 'Что такое качество?',
	'4': 'Разница между QA, QC и тестировщиком',
	'5': 'Что такое “требования”? Какие они бывают?',
	'6': 'Виды и уровни тестирования',
	'7': 'Что такое “тестирование производительности”, что в него входит?',
	'8': 'Что такое Performance тестирование?',
	'9': 'Что такое регрессионное тестирование?',
	'10': 'Что такое смоук-тестирование?',
	'11': 'Что такое негативное тестирование?',
	'12': 'Чем отличается верификация от валидации?',
	'13': 'Что такое “тест-план”? Основные разделы',
	'14': 'Какие бывают виды документации для тестирования?',
	'15': 'Что такое тест-дизайн?',
	'16': 'Что такое “классы эквивалентности”?',
	'17': 'Что такое “граничные значения”?',
	'18': 'Что такое “тест-кейс”? Чем тест-кейс отличается от отчета о дефекте?',
	'19': 'Как работает браузер?',
	'20': 'Что такое куки и кэш?',
	'21': 'Клиент-серверная архитектура',
	'22': 'Что такое HTML, CSS?',
	'23': 'Что такое идемпотентные методы HTTP?',
	'24': 'Чем отличается метод HTTP PUT от PATCH?',
	'25': 'Что такое приоритет Priority и серьезность Severity в отчете о дефекте?',
	'25': 'Основные модели разработки ПО',
	'26': 'Жизненный цикл ПО',
	'27': 'В чем разница между итерационной и инкрементальной моделями?',
	'28': 'Перечислить принципы тестирования',
	'29': 'Какие виды интеграционного тестирования?',
	'30': 'Что такое Traceability Matrix?',
	'31': 'Что такое Sanity Testing?',
	'32': 'Что такое End-to-End тест?',
	'33': 'Что такое REST API, SOAP? В чем разница?',
	'34': 'Какие отличия между XML и JSON?',
	'35': 'Какие виды баз данных сущесвтуют?',
	'36': 'Зачем необходимы инструменты разработчика в браузере (Chrome DevTools) и как они помогают в тестировании.',
	'37': 'Как снять логи с AOS/IOS?',
	'38': 'Есть форма регистрации в веб-приложении с полями (first name, last name, username, password, repeat password) и кнопкой Register. Какие проверки нужно провести?',
	'39': 'Что такое и чем отличаются виртуальная машина, симулятор и эмулятор?',
	'40': 'Как будете тестировать программу, если для продукта нет документации?',
  '41': 'Лайфхак для настоящего тестировщика: Как сделать тестировщика счастливым? Отдать ему несколько страниц со списком багов!'

}

# обработчик команды '/start'
@bot.message_handler(commands=['start'])
def start_command_handler(message: types.Message):
    # отправляем ответ на команду '/start'
    bot.send_message(
        chat_id=message.chat.id, # id чата, в который необходимо направить сообщение
        text='Добро пожаловать, коллега! Экспертами не становятся за один день, но ты на верном пути! ??\nВведи число от 1 до 40, например, 5', # текст сообщения
    )

# обработчик всех остальных сообщений
@bot.message_handler()
def message_handler(message: types.Message):
    # пробуем найти ключевую фразу в словаре
    definition = DEFINITOINS.get(
        message.text.lower(), # приводим текст сообщения к нижнему регистру
    )
    # если номер не существует, то переменная definition будет иметь значение None
    # проверяем это условие
    if definition is None:
        # если номер не был найдена в списке
        # отправляем ответ
        bot.send_message(
            chat_id=message.chat.id,
            text='?? О, ты уже всё?',
        )
        # выходим из функции
        return
    
    # если номер был найден, формируем текст сообщения и отправляем его
    # если перед строкой поставить букву f, то в фигурных скобках {} можно использовать переменные :)
    bot.send_message(
        chat_id=message.chat.id,
        text=f'Расскажи\n<code>{definition}</code>',
    )

    bot.send_message(
        chat_id=message.chat.id,
        text=f'Еще?',
    )


# главная функция программы
def main():
    # запускаем нашего бота
    bot.infinity_polling()


if __name__ == '__main__':
    main()